
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "vmrseq"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('vmrseq')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("cell_1")
> ### * cell_1
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cell_1
> ### Title: cell_1
> ### Aliases: cell_1
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(cell_1)
> cell_1
      V1      V2 V3 V4 V5
1   chr1 3012096  *  2  2
2   chr1 3020332  *  1  1
3   chr1 3021720  *  1  1
4   chr1 3027398  *  3  3
5   chr1 3029094  *  1  1
6   chr1 3029105  *  1  1
7   chr1 3041159  *  1  1
8   chr1 3041186  *  1  1
9   chr1 3041193  *  1  1
10  chr1 3041237  *  1  1
11  chr1 3065265  *  5  5
12  chr1 3075666  *  2  2
13  chr1 3079948  *  2  2
14  chr1 3086578  *  1  1
15  chr1 3086998  *  3  3
16  chr1 3105986  *  1  1
17  chr1 3111882  *  1  1
18  chr1 3115551  *  1  1
19  chr1 3117711  *  0  1
20  chr1 3118482  *  1  1
21  chr1 3119952  *  0  3
22  chr1 3133895  *  1  1
23  chr1 3140133  *  1  1
24  chr1 3143600  *  1  1
25  chr1 3143620  *  1  1
26  chr1 3143633  *  0  1
27  chr1 3147914  *  1  1
28  chr1 3147957  *  2  2
29  chr1 3148166  *  1  1
30  chr1 3171620  *  1  1
31  chr1 3171681  *  1  1
32  chr1 3173498  *  1  1
33  chr1 3177036  *  1  1
34  chr1 3184767  *  2  2
35  chr1 3188425  *  1  1
36  chr1 3188444  *  1  1
37  chr1 3196918  *  1  1
38  chr1 3198426  *  2  2
39  chr1 3216278  *  1  1
40  chr1 3216299  *  1  1
41  chr1 3216317  *  1  1
42  chr1 3216614  *  1  1
43  chr1 3216893  *  1  1
44  chr1 3216902  *  1  1
45  chr1 3217169  *  1  1
46  chr1 3220987  *  1  1
47  chr1 3221314  *  1  1
48  chr1 3224372  *  1  1
49  chr1 3225838  *  1  1
50  chr1 3228140  *  1  1
51  chr1 3230148  *  0  2
52  chr1 3230411  *  1  1
53  chr1 3230452  *  1  1
54  chr1 3233129  *  1  1
55  chr1 3233259  *  1  1
56  chr1 3233309  *  1  1
57  chr1 3241896  *  1  1
58  chr1 3241924  *  1  1
59  chr1 3251564  *  2  2
60  chr1 3264737  *  1  1
61  chr1 3275691  *  1  1
62  chr1 3275696  *  1  1
63  chr1 3280381  *  2  2
64  chr1 3280398  *  2  2
65  chr1 3280403  *  2  2
66  chr1 3280414  *  2  2
67  chr1 3280425  *  2  2
68  chr1 3280429  *  2  2
69  chr1 3282190  *  1  1
70  chr1 3290042  *  1  1
71  chr1 3290068  *  1  1
72  chr1 3291059  *  1  1
73  chr1 3291115  *  1  1
74  chr1 3300672  *  2  2
75  chr1 3300686  *  0  2
76  chr1 3300703  *  2  2
77  chr1 3302284  *  2  2
78  chr1 3302295  *  2  2
79  chr1 3302305  *  2  2
80  chr1 3302343  *  4  4
81  chr1 3302387  *  4  4
82  chr1 3311787  *  2  2
83  chr1 3312887  *  0  1
84  chr1 3317176  *  2  2
85  chr1 3318366  *  0  1
86  chr1 3320135  *  1  1
87  chr1 3321028  *  2  2
88  chr1 3321368  *  1  1
89  chr1 3336593  *  1  1
90  chr1 3337273  *  1  1
91  chr1 3343547  *  1  1
92  chr1 3343905  *  0  1
93  chr1 3343919  *  1  1
94  chr1 3345267  *  2  2
95  chr1 3345295  *  2  2
96  chr1 3345301  *  2  2
97  chr1 3351929  *  1  1
98  chr1 3360985  *  3  3
99  chr1 3363399  *  1  1
100 chr1 3366417  *  0  1
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  13.934 1.076 21.413 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
